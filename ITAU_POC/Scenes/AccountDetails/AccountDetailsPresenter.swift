//
//  AccountDetailsPresenter.swift
//  ITAU_POC
//
//  Created by Parag on 11/11/19.
//  Copyright (c) 2019 Parag. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AccountDetailsPresentationLogic {
    func presentAccountDetails(response: AccountDetails.AccountData.Response)
    func presentStatementDetails(response: AccountDetails.StatementDetails.Response)
    func presentStartLoaderActivity()
    func presentStopLoaderActivity()
}

class AccountDetailsPresenter: AccountDetailsPresentationLogic {
    weak var viewController: AccountDetailsDisplayLogic?
    
    func presentAccountDetails(response: AccountDetails.AccountData.Response) {
        let userId = response.accountDetails.userId
        let name = response.accountDetails.name
        let bankAccount = (response.accountDetails.bankAccount ?? "") + " / " + (response.accountDetails.agency ?? "")
        let balance = response.accountDetails.balance
        let agency = response.accountDetails.agency
        let userAccount : UserAccount = UserAccount(userId: userId, name: name, bankAccount: bankAccount, agency: agency, balance: balance)
        let viewModel = AccountDetails.AccountData.ViewModel(accountDetails: userAccount)
        viewController?.displayUserDetail(viewModel: viewModel)
    }
    
    func presentStatementDetails(response: AccountDetails.StatementDetails.Response) {
        let statementModel = AccountDetails.StatementDetails.ViewModel(statements: response.statements)
        viewController?.displayAccountStatementList(viewModel: statementModel)
    }
    
    func presentStartLoaderActivity() {
        viewController?.startLoaderActivity()
    }
    
    func presentStopLoaderActivity() {
        viewController?.stopLoaderActivity()
    }
}
