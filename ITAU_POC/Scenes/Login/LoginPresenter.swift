//
//  LoginPresenter.swift
//  ITAU_POC
//
//  Created by Parag on 11/11/19.
//  Copyright (c) 2019 Parag. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
//Start Here
protocol LoginPresentationLogic {
    func presentAuthenticationResult(response: Login.LoginModel.Response)
    func presentLoggedInUserDetails(request: Login.LoginModel.Request)
    func presentNetworkError()
    func presentStartLoaderActivity()
    func presentStopLoaderActivity()
}

class LoginPresenter {
    weak var viewController: LoginDisplayLogic?
}

extension LoginPresenter : LoginPresentationLogic {
    /// Present authentication Result
    /// - Parameter response: Login Response Model
    func presentAuthenticationResult(response: Login.LoginModel.Response) {
        let viewModel = Login.LoginModel.ViewModel(loginResponse: response.loginResponse)
        viewController?.displayAccountDetails(viewModel: viewModel)
    }
    
    /// Present logged in user detail
    /// - Parameter request: login model details
    func presentLoggedInUserDetails(request: Login.LoginModel.Request) {
        viewController?.displayLoggedInUserDetails(request: request)
    }
    
    /// Present Network Error to VC
    func presentNetworkError() {
        viewController?.showNetworkError()
        presentStopLoaderActivity()
    }
    
    /// Present start loading to VC
    func presentStartLoaderActivity() {
        viewController?.startLoaderActivity()
    }
    
    /// Present stop loading to VC
    func presentStopLoaderActivity() {
        viewController?.stopLoaderActivity()
    }
}
